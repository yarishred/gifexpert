{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","Components/GifGridItem.js","Components/GrifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categoria","type","value","onChange","target","getGifs","a","URL","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifGridItem","className","src","GrifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categorias","setcategorias","ReactDOM","render","document","getElementById"],"mappings":"mMAmCeA,EAhCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAqBzC,OACE,sBAAMC,SAfa,SAACC,GACpBA,EAAEC,iBAGEJ,EAAWK,OAAOC,QAAU,IAG9BR,GAAc,SAACS,GAAD,OAAgBP,GAAhB,mBAA+BO,OAG7CN,EAAc,MAKhB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SApBhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCPdG,EAAO,uCAAG,WAAOL,GAAP,uBAAAM,EAAA,6DACbC,EADa,iDAEwBC,UAAUR,GAFlC,+DAIKS,MAAMF,GAJX,cAIbG,EAJa,gBAKIA,EAAUC,OALd,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,IAClCjB,KAAMc,EAAId,SAZK,kBAgBZY,GAhBY,4CAAH,sDCaLQ,EAXK,SAAC,GAAoB,IAAlBJ,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC5B,OACE,8BACE,sBAAKI,UAAU,0CAAf,UACE,qBAAKC,IAAKL,IACV,4BAAID,UCkBGO,EApBE,SAAC,GAAmB,IAAjBxB,EAAgB,EAAhBA,UAAgB,ECFR,SAACA,GAAe,IAAD,EACfR,mBAAS,CACjCoB,KAAM,GACNa,SAAS,IAH8B,mBAClCC,EADkC,KAC3BC,EAD2B,KAezC,OATAC,qBAAU,WACRvB,EAAQL,GAAW6B,MAAK,SAACC,GACrBH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGhB,CAACzB,IAEG0B,EDXuBK,CAAc/B,GAAtCyB,EAF4B,EAE5BA,QAAcN,EAFc,EAEnBP,KAGf,OACE,gCACE,6BAAKZ,IACJyB,GAAW,mBAAGH,UAAU,8CAAb,wBACZ,qBAAKA,UAAU,8CAAf,SACE,6BACGH,EAAOL,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,eEMnBgB,EAnBM,WAAO,IAAD,EACWxC,mBAAS,CAAC,cADrB,mBAClByC,EADkB,KACNC,EADM,KAIzB,OACE,gCACE,8CACA,cAAC,EAAD,CAAa3C,cAAe2C,IAC5B,uBAEA,6BACGD,EAAWnB,KAAI,SAACd,GAAD,OACd,cAAC,EAAD,CAAUA,UAAWA,GAAgBA,Y,MCT/CmC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.67e6527c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({ setCategorias }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    //Prevenir de agregar elementos si no hay caracteres en el input \r\n    if (inputValue.trim().length >= 1) {\r\n\r\n      //Agregar el elemento del input value al array categorias\r\n      setCategorias((categoria) => [inputValue, ...categoria, ]);\r\n\r\n      //retorna el elemento a un string vacio \r\n      setInputValue(\"\");\r\n    }\r\n   \r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes ={\r\n    setCategorias: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;\r\n","export const getGifs = async (categoria) => {\r\n    const URL =\r\n    `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(categoria) }&api_key=wzIzckHKMwb6qHQ6Nr69jBCUpL3Kp6Gy&limit=10`;\r\n\r\n    const respuesta = await fetch(URL);\r\n    const { data } = await respuesta.json();\r\n\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url,\r\n        type: img.type,\r\n      };\r\n    });\r\n\r\n    return gifs;\r\n  };\r\n\r\n","import React from \"react\";\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n  return (\r\n    <div>\r\n      <div className=\"card animate__animated animate__fadeIn \">\r\n        <img src={url} />\r\n        <p>{title}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n\r\nimport GifGridItem from \"./GifGridItem\";\r\n\r\nconst GrifGrid = ({ categoria }) => {\r\n\r\n const {loading, data:images} = useFetchGifs( categoria );\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h3>{categoria}</h3>\r\n      {loading && <p className=\"card-grid animate__animated animate__flash \">Loading...</p>}\r\n      <div className=\"card-grid animate__animated animate__fadeIn\">\r\n        <ol>\r\n          {images.map((img) => (\r\n            <GifGridItem key={img.id} {...img} />\r\n          ))}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GrifGrid;\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(categoria).then((imgs) => {\r\n        setstate({\r\n            data: imgs,\r\n            loading: false,\r\n          });\r\n    });\r\n  }, [categoria]);\r\n\r\n  return state; //data: [], loading: true\r\n};\r\n","import React, { useState } from \"react\";\r\nimport AddCategory from \"./Components/AddCategory\";\r\nimport GrifGrid from \"./Components/GrifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n  const [categorias, setcategorias] = useState([\"One Punch\"]);\r\n\r\n \r\n  return (\r\n    <div>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategorias={setcategorias} />\r\n      <hr />\r\n\r\n      <ol>\r\n        {categorias.map((categoria) => (\r\n          <GrifGrid categoria={categoria} key={categoria} />\r\n        ))}\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp'\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}